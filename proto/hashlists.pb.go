// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: proto/hashlists.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThreatType int32

const (
	ThreatType_THREAT_TYPE_UNSPECIFIED         ThreatType = 0
	ThreatType_MALWARE                         ThreatType = 1
	ThreatType_SOCIAL_ENGINEERING              ThreatType = 2
	ThreatType_UNWANTED_SOFTWARE               ThreatType = 3
	ThreatType_POTENTIALLY_HARMFUL_APPLICATION ThreatType = 4
)

// Enum value maps for ThreatType.
var (
	ThreatType_name = map[int32]string{
		0: "THREAT_TYPE_UNSPECIFIED",
		1: "MALWARE",
		2: "SOCIAL_ENGINEERING",
		3: "UNWANTED_SOFTWARE",
		4: "POTENTIALLY_HARMFUL_APPLICATION",
	}
	ThreatType_value = map[string]int32{
		"THREAT_TYPE_UNSPECIFIED":         0,
		"MALWARE":                         1,
		"SOCIAL_ENGINEERING":              2,
		"UNWANTED_SOFTWARE":               3,
		"POTENTIALLY_HARMFUL_APPLICATION": 4,
	}
)

func (x ThreatType) Enum() *ThreatType {
	p := new(ThreatType)
	*p = x
	return p
}

func (x ThreatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreatType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hashlists_proto_enumTypes[0].Descriptor()
}

func (ThreatType) Type() protoreflect.EnumType {
	return &file_proto_hashlists_proto_enumTypes[0]
}

func (x ThreatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreatType.Descriptor instead.
func (ThreatType) EnumDescriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{0}
}

type LikelySafeType int32

const (
	LikelySafeType_LIKELY_SAFE_TYPE_UNSPECIFIED LikelySafeType = 0
	LikelySafeType_GENERAL_BROWSING             LikelySafeType = 1
	LikelySafeType_CSD                          LikelySafeType = 2
	LikelySafeType_DOWNLOAD                     LikelySafeType = 3
)

// Enum value maps for LikelySafeType.
var (
	LikelySafeType_name = map[int32]string{
		0: "LIKELY_SAFE_TYPE_UNSPECIFIED",
		1: "GENERAL_BROWSING",
		2: "CSD",
		3: "DOWNLOAD",
	}
	LikelySafeType_value = map[string]int32{
		"LIKELY_SAFE_TYPE_UNSPECIFIED": 0,
		"GENERAL_BROWSING":             1,
		"CSD":                          2,
		"DOWNLOAD":                     3,
	}
)

func (x LikelySafeType) Enum() *LikelySafeType {
	p := new(LikelySafeType)
	*p = x
	return p
}

func (x LikelySafeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LikelySafeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hashlists_proto_enumTypes[1].Descriptor()
}

func (LikelySafeType) Type() protoreflect.EnumType {
	return &file_proto_hashlists_proto_enumTypes[1]
}

func (x LikelySafeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LikelySafeType.Descriptor instead.
func (LikelySafeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{1}
}

type HashLength int32

const (
	HashLength_HASH_LENGTH_UNSPECIFIED HashLength = 0
	HashLength_FOUR_BYTES              HashLength = 1
	HashLength_EIGHT_BYTES             HashLength = 2
	HashLength_SIXTEEN_BYTES           HashLength = 3
	HashLength_THIRTY_TWO_BYTES        HashLength = 4
)

// Enum value maps for HashLength.
var (
	HashLength_name = map[int32]string{
		0: "HASH_LENGTH_UNSPECIFIED",
		1: "FOUR_BYTES",
		2: "EIGHT_BYTES",
		3: "SIXTEEN_BYTES",
		4: "THIRTY_TWO_BYTES",
	}
	HashLength_value = map[string]int32{
		"HASH_LENGTH_UNSPECIFIED": 0,
		"FOUR_BYTES":              1,
		"EIGHT_BYTES":             2,
		"SIXTEEN_BYTES":           3,
		"THIRTY_TWO_BYTES":        4,
	}
)

func (x HashLength) Enum() *HashLength {
	p := new(HashLength)
	*p = x
	return p
}

func (x HashLength) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashLength) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hashlists_proto_enumTypes[2].Descriptor()
}

func (HashLength) Type() protoreflect.EnumType {
	return &file_proto_hashlists_proto_enumTypes[2]
}

func (x HashLength) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashLength.Descriptor instead.
func (HashLength) EnumDescriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{2}
}

type ListHashListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashLists []*HashList `protobuf:"bytes,1,rep,name=hashLists,proto3" json:"hashLists,omitempty"` // List of hash lists
}

func (x *ListHashListsResponse) Reset() {
	*x = ListHashListsResponse{}
	mi := &file_proto_hashlists_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHashListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHashListsResponse) ProtoMessage() {}

func (x *ListHashListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hashlists_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHashListsResponse.ProtoReflect.Descriptor instead.
func (*ListHashListsResponse) Descriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{0}
}

func (x *ListHashListsResponse) GetHashLists() []*HashList {
	if x != nil {
		return x.HashLists
	}
	return nil
}

type HashList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // The name of the hash list. Note that the Global Cache is also just a hash list and can be referred to here.
	Version []byte `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // The version of the hash list. The client MUST NOT manipulate those bytes. A base64-encoded string.
	// The Rice-delta encoded version of removal indices. Since each hash list definitely has less than 2^32 entries, the indices are treated as 32-bit integers and encoded.
	CompressedRemovals *RiceDeltaEncoded32Bit `protobuf:"bytes,4,opt,name=compressedRemovals,proto3" json:"compressedRemovals,omitempty"`
	// Clients should wait at least this long to get the hash list again.
	// If omitted or zero, clients SHOULD fetch immediately because it indicates that the server has an additional update to be sent to the client, but could not due to the client-specified constraints.
	MinimumWaitDuration *durationpb.Duration `protobuf:"bytes,6,opt,name=minimumWaitDuration,proto3" json:"minimumWaitDuration,omitempty"`
	// Types that are assignable to Checksum:
	//
	//	*HashList_Sha256Checksum
	Checksum isHashList_Checksum `protobuf_oneof:"checksum"`
	// Metadata about the hash list. This is not populated by the hashList.get method, but this is populated by the ListHashLists method.
	Metadata *HashListMetadata `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are assignable to CompressedAdditions:
	//
	//	*HashList_AdditionsThirtyTwoBytes
	CompressedAdditions isHashList_CompressedAdditions `protobuf_oneof:"compressed_additions"`
}

func (x *HashList) Reset() {
	*x = HashList{}
	mi := &file_proto_hashlists_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashList) ProtoMessage() {}

func (x *HashList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hashlists_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashList.ProtoReflect.Descriptor instead.
func (*HashList) Descriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{1}
}

func (x *HashList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HashList) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *HashList) GetCompressedRemovals() *RiceDeltaEncoded32Bit {
	if x != nil {
		return x.CompressedRemovals
	}
	return nil
}

func (x *HashList) GetMinimumWaitDuration() *durationpb.Duration {
	if x != nil {
		return x.MinimumWaitDuration
	}
	return nil
}

func (m *HashList) GetChecksum() isHashList_Checksum {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (x *HashList) GetSha256Checksum() []byte {
	if x, ok := x.GetChecksum().(*HashList_Sha256Checksum); ok {
		return x.Sha256Checksum
	}
	return nil
}

func (x *HashList) GetMetadata() *HashListMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *HashList) GetCompressedAdditions() isHashList_CompressedAdditions {
	if m != nil {
		return m.CompressedAdditions
	}
	return nil
}

func (x *HashList) GetAdditionsThirtyTwoBytes() *RiceDeltaEncoded256Bit {
	if x, ok := x.GetCompressedAdditions().(*HashList_AdditionsThirtyTwoBytes); ok {
		return x.AdditionsThirtyTwoBytes
	}
	return nil
}

type isHashList_Checksum interface {
	isHashList_Checksum()
}

type HashList_Sha256Checksum struct {
	Sha256Checksum []byte `protobuf:"bytes,7,opt,name=sha256Checksum,proto3,oneof"` // Base64-encoded string
}

func (*HashList_Sha256Checksum) isHashList_Checksum() {}

type isHashList_CompressedAdditions interface {
	isHashList_CompressedAdditions()
}

type HashList_AdditionsThirtyTwoBytes struct {
	AdditionsThirtyTwoBytes *RiceDeltaEncoded256Bit `protobuf:"bytes,11,opt,name=additionsThirtyTwoBytes,proto3,oneof"`
}

func (*HashList_AdditionsThirtyTwoBytes) isHashList_CompressedAdditions() {}

type RiceDeltaEncoded32Bit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstValue    uint32 `protobuf:"varint,1,opt,name=firstValue,proto3" json:"firstValue,omitempty"`
	RiceParameter int32  `protobuf:"varint,2,opt,name=riceParameter,proto3" json:"riceParameter,omitempty"`
	EntriesCount  int32  `protobuf:"varint,3,opt,name=entriesCount,proto3" json:"entriesCount,omitempty"`
	EncodedData   []byte `protobuf:"bytes,4,opt,name=encodedData,proto3" json:"encodedData,omitempty"` // Base64-encoded string
}

func (x *RiceDeltaEncoded32Bit) Reset() {
	*x = RiceDeltaEncoded32Bit{}
	mi := &file_proto_hashlists_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiceDeltaEncoded32Bit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiceDeltaEncoded32Bit) ProtoMessage() {}

func (x *RiceDeltaEncoded32Bit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hashlists_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiceDeltaEncoded32Bit.ProtoReflect.Descriptor instead.
func (*RiceDeltaEncoded32Bit) Descriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{2}
}

func (x *RiceDeltaEncoded32Bit) GetFirstValue() uint32 {
	if x != nil {
		return x.FirstValue
	}
	return 0
}

func (x *RiceDeltaEncoded32Bit) GetRiceParameter() int32 {
	if x != nil {
		return x.RiceParameter
	}
	return 0
}

func (x *RiceDeltaEncoded32Bit) GetEntriesCount() int32 {
	if x != nil {
		return x.EntriesCount
	}
	return 0
}

func (x *RiceDeltaEncoded32Bit) GetEncodedData() []byte {
	if x != nil {
		return x.EncodedData
	}
	return nil
}

type RiceDeltaEncoded256Bit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstValueFirstPart  string `protobuf:"bytes,1,opt,name=firstValueFirstPart,proto3" json:"firstValueFirstPart,omitempty"` // Base64-encoded string
	FirstValueSecondPart uint64 `protobuf:"varint,2,opt,name=firstValueSecondPart,proto3" json:"firstValueSecondPart,omitempty"`
	FirstValueThirdPart  uint64 `protobuf:"varint,3,opt,name=firstValueThirdPart,proto3" json:"firstValueThirdPart,omitempty"`
	FirstValueFourthPart uint64 `protobuf:"varint,4,opt,name=firstValueFourthPart,proto3" json:"firstValueFourthPart,omitempty"`
	RiceParameter        int32  `protobuf:"varint,5,opt,name=riceParameter,proto3" json:"riceParameter,omitempty"`
	EntriesCount         int32  `protobuf:"varint,6,opt,name=entriesCount,proto3" json:"entriesCount,omitempty"`
	EncodedData          []byte `protobuf:"bytes,7,opt,name=encodedData,proto3" json:"encodedData,omitempty"` // Base64-encoded string
}

func (x *RiceDeltaEncoded256Bit) Reset() {
	*x = RiceDeltaEncoded256Bit{}
	mi := &file_proto_hashlists_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiceDeltaEncoded256Bit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiceDeltaEncoded256Bit) ProtoMessage() {}

func (x *RiceDeltaEncoded256Bit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hashlists_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiceDeltaEncoded256Bit.ProtoReflect.Descriptor instead.
func (*RiceDeltaEncoded256Bit) Descriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{3}
}

func (x *RiceDeltaEncoded256Bit) GetFirstValueFirstPart() string {
	if x != nil {
		return x.FirstValueFirstPart
	}
	return ""
}

func (x *RiceDeltaEncoded256Bit) GetFirstValueSecondPart() uint64 {
	if x != nil {
		return x.FirstValueSecondPart
	}
	return 0
}

func (x *RiceDeltaEncoded256Bit) GetFirstValueThirdPart() uint64 {
	if x != nil {
		return x.FirstValueThirdPart
	}
	return 0
}

func (x *RiceDeltaEncoded256Bit) GetFirstValueFourthPart() uint64 {
	if x != nil {
		return x.FirstValueFourthPart
	}
	return 0
}

func (x *RiceDeltaEncoded256Bit) GetRiceParameter() int32 {
	if x != nil {
		return x.RiceParameter
	}
	return 0
}

func (x *RiceDeltaEncoded256Bit) GetEntriesCount() int32 {
	if x != nil {
		return x.EntriesCount
	}
	return 0
}

func (x *RiceDeltaEncoded256Bit) GetEncodedData() []byte {
	if x != nil {
		return x.EncodedData
	}
	return nil
}

type HashListMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreatTypes          []ThreatType     `protobuf:"varint,1,rep,packed,name=threatTypes,proto3,enum=proto.ThreatType" json:"threatTypes,omitempty"`
	LikelySafeTypes      []LikelySafeType `protobuf:"varint,2,rep,packed,name=likelySafeTypes,proto3,enum=proto.LikelySafeType" json:"likelySafeTypes,omitempty"`
	MobileOptimized      bool             `protobuf:"varint,3,opt,name=mobileOptimized,proto3" json:"mobileOptimized,omitempty"`
	Description          string           `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	SupportedHashLengths []HashLength     `protobuf:"varint,5,rep,packed,name=supportedHashLengths,proto3,enum=proto.HashLength" json:"supportedHashLengths,omitempty"`
}

func (x *HashListMetadata) Reset() {
	*x = HashListMetadata{}
	mi := &file_proto_hashlists_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashListMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashListMetadata) ProtoMessage() {}

func (x *HashListMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hashlists_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashListMetadata.ProtoReflect.Descriptor instead.
func (*HashListMetadata) Descriptor() ([]byte, []int) {
	return file_proto_hashlists_proto_rawDescGZIP(), []int{4}
}

func (x *HashListMetadata) GetThreatTypes() []ThreatType {
	if x != nil {
		return x.ThreatTypes
	}
	return nil
}

func (x *HashListMetadata) GetLikelySafeTypes() []LikelySafeType {
	if x != nil {
		return x.LikelySafeTypes
	}
	return nil
}

func (x *HashListMetadata) GetMobileOptimized() bool {
	if x != nil {
		return x.MobileOptimized
	}
	return false
}

func (x *HashListMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HashListMetadata) GetSupportedHashLengths() []HashLength {
	if x != nil {
		return x.SupportedHashLengths
	}
	return nil
}

var File_proto_hashlists_proto protoreflect.FileDescriptor

var file_proto_hashlists_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x68, 0x61, 0x73,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x4c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x33, 0x32, 0x42, 0x69, 0x74, 0x52, 0x12, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x12,
	0x4b, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x57, 0x61, 0x69, 0x74, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x57, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0e,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x17, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x69, 0x72, 0x74, 0x79, 0x54, 0x77,
	0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x32, 0x35, 0x36, 0x42, 0x69, 0x74, 0x48, 0x01, 0x52, 0x17, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x69, 0x72, 0x74, 0x79, 0x54, 0x77,
	0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x42, 0x16, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x52,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x33,
	0x32, 0x42, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xd0, 0x02, 0x0a, 0x16, 0x52, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x32, 0x35, 0x36, 0x42, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a,
	0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x46, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x50, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x6f, 0x75,
	0x72, 0x74, 0x68, 0x50, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x9b, 0x02, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0f, 0x6c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x6b, 0x65, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6c,
	0x69, 0x6b, 0x65, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x14, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x14, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x73, 0x2a, 0x8a, 0x01, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x48, 0x52, 0x45, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x41, 0x4c, 0x57, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f,
	0x43, 0x49, 0x41, 0x4c, 0x5f, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x45, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x57, 0x41, 0x4e, 0x54, 0x45, 0x44, 0x5f, 0x53,
	0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x4f, 0x54,
	0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x48, 0x41, 0x52, 0x4d, 0x46, 0x55, 0x4c,
	0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x5f,
	0x0a, 0x0e, 0x4c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x49, 0x4b, 0x45, 0x4c, 0x59, 0x5f, 0x53, 0x41, 0x46, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x42, 0x52,
	0x4f, 0x57, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x44, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x03, 0x2a,
	0x73, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x17, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f,
	0x55, 0x52, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x49, 0x58, 0x54, 0x45, 0x45, 0x4e, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x48, 0x49, 0x52, 0x54, 0x59, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x10, 0x04, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_hashlists_proto_rawDescOnce sync.Once
	file_proto_hashlists_proto_rawDescData = file_proto_hashlists_proto_rawDesc
)

func file_proto_hashlists_proto_rawDescGZIP() []byte {
	file_proto_hashlists_proto_rawDescOnce.Do(func() {
		file_proto_hashlists_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_hashlists_proto_rawDescData)
	})
	return file_proto_hashlists_proto_rawDescData
}

var file_proto_hashlists_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_hashlists_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_hashlists_proto_goTypes = []any{
	(ThreatType)(0),                // 0: proto.ThreatType
	(LikelySafeType)(0),            // 1: proto.LikelySafeType
	(HashLength)(0),                // 2: proto.HashLength
	(*ListHashListsResponse)(nil),  // 3: proto.ListHashListsResponse
	(*HashList)(nil),               // 4: proto.HashList
	(*RiceDeltaEncoded32Bit)(nil),  // 5: proto.RiceDeltaEncoded32Bit
	(*RiceDeltaEncoded256Bit)(nil), // 6: proto.RiceDeltaEncoded256Bit
	(*HashListMetadata)(nil),       // 7: proto.HashListMetadata
	(*durationpb.Duration)(nil),    // 8: google.protobuf.Duration
}
var file_proto_hashlists_proto_depIdxs = []int32{
	4, // 0: proto.ListHashListsResponse.hashLists:type_name -> proto.HashList
	5, // 1: proto.HashList.compressedRemovals:type_name -> proto.RiceDeltaEncoded32Bit
	8, // 2: proto.HashList.minimumWaitDuration:type_name -> google.protobuf.Duration
	7, // 3: proto.HashList.metadata:type_name -> proto.HashListMetadata
	6, // 4: proto.HashList.additionsThirtyTwoBytes:type_name -> proto.RiceDeltaEncoded256Bit
	0, // 5: proto.HashListMetadata.threatTypes:type_name -> proto.ThreatType
	1, // 6: proto.HashListMetadata.likelySafeTypes:type_name -> proto.LikelySafeType
	2, // 7: proto.HashListMetadata.supportedHashLengths:type_name -> proto.HashLength
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proto_hashlists_proto_init() }
func file_proto_hashlists_proto_init() {
	if File_proto_hashlists_proto != nil {
		return
	}
	file_proto_hashlists_proto_msgTypes[1].OneofWrappers = []any{
		(*HashList_Sha256Checksum)(nil),
		(*HashList_AdditionsThirtyTwoBytes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_hashlists_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_hashlists_proto_goTypes,
		DependencyIndexes: file_proto_hashlists_proto_depIdxs,
		EnumInfos:         file_proto_hashlists_proto_enumTypes,
		MessageInfos:      file_proto_hashlists_proto_msgTypes,
	}.Build()
	File_proto_hashlists_proto = out.File
	file_proto_hashlists_proto_rawDesc = nil
	file_proto_hashlists_proto_goTypes = nil
	file_proto_hashlists_proto_depIdxs = nil
}
